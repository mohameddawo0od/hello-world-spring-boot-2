# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
#- repo: self
  webhooks:
    - webhook: FirstWebHook
      connection: FirstWebHook


variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        ### JSON payload data is available in the form of ${{ parameters.<WebhookAlias>.<JSONPath>}}
        script: |
          echo ${{ parameters.FirstWebHook.resource.message.title}}

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
        buildContext: '$(Build.SourcesDirectory)'
        repository: '180729926970.dkr.ecr.eu-west-1.amazonaws.com/hello-world'

    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'awsCredentials'
        regionName: 'eu-west-1'
        imageSource: 'imagename'
        sourceImageName: '180729926970.dkr.ecr.eu-west-1.amazonaws.com/hello-world'
        sourceImageTag: $(Build.BuildId)
        pushTag: $(Build.BuildId)
        repositoryName: 'hello-world'

    - task: AWSShellScript@1
      displayName: 'Deploy to EKS'
      inputs:
        awsCredentials: 'awsCredentials'
        regionName: 'eu-west-1'
        scriptType: 'inline'
        inlineScript: |
          aws eks update-kubeconfig --region eu-west-1 --name my-cluster
          cat /home/vsts/.kube/config
          kubectl apply -f hello-world.yml
          imageTag=$(aws ecr describe-images --repository-name hello-world --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]')
          temp="${imageTag%\"}"
          temp="${temp#\"}"
          kubectl set image deployment/hello-world  -n ms hello-world-pod=180729926970.dkr.ecr.eu-west-1.amazonaws.com/hello-world:"$temp"
